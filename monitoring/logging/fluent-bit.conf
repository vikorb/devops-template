[SERVICE]
    Flush        5
    Daemon       Off
    Log_Level    info
    Parsers_File parsers.conf
    HTTP_Server  On
    HTTP_Listen  0.0.0.0
    HTTP_Port    2020

# Application Logs
[INPUT]
    Name              tail
    Tag               app.*
    Path              /var/log/containers/app-*.log
    Parser            docker
    DB                /var/lib/fluent-bit/app.db
    Mem_Buf_Limit     5MB
    Skip_Long_Lines   On
    Refresh_Interval  10

# Node Logs (System)
[INPUT]
    Name              tail
    Tag               node.*
    Path              /var/log/syslog
    Parser            syslog
    DB                /var/lib/fluent-bit/node.db
    Mem_Buf_Limit     5MB
    Skip_Long_Lines   On
    Refresh_Interval  10

# ECS Tasks Logs (if using AWS ECS)
[INPUT]
    Name              tail
    Tag               ecs.*
    Path              /var/log/containers/ecs-*.log
    Parser            docker
    DB                /var/lib/fluent-bit/ecs.db
    Mem_Buf_Limit     5MB
    Skip_Long_Lines   On
    Refresh_Interval  10

# Kubernetes Logs (if using K8s)
[INPUT]
    Name              tail
    Tag               kube.*
    Path              /var/log/containers/*.log
    Exclude_Path      /var/log/containers/fluent-bit*
    Parser            docker
    DB                /var/lib/fluent-bit/kube.db
    Mem_Buf_Limit     5MB
    Skip_Long_Lines   On
    Refresh_Interval  10

# Add Kubernetes metadata
[FILTER]
    Name                kubernetes
    Match               kube.*
    Kube_URL            https://kubernetes.default.svc:443
    Kube_CA_File        /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    Kube_Token_File     /var/run/secrets/kubernetes.io/serviceaccount/token
    Kube_Tag_Prefix     kube.var.log.containers.
    Merge_Log           On
    Merge_Log_Key       log_processed
    K8S-Logging.Parser  On
    K8S-Logging.Exclude Off

# Parse JSON logs
[FILTER]
    Name         parser
    Match        app.*
    Key_Name     log
    Parser       json
    Reserve_Data On

# Add timestamp
[FILTER]
    Name         modify
    Match        *
    Condition    Key_Does_Not_Exist timestamp
    Add          timestamp ${TIMESTAMP}

# Send logs to Elasticsearch
[OUTPUT]
    Name            es
    Match           *
    Host            elasticsearch
    Port            9200
    Index           logs
    Type            _doc
    Logstash_Format On
    Logstash_Prefix log
    Time_Key        @timestamp
    Time_Key_Format %Y-%m-%dT%H:%M:%S
    Include_Tag_Key On
    Tag_Key         fluentbit_tag
    Retry_Limit     False

# Send logs to CloudWatch (if using AWS)
[OUTPUT]
    Name                cloudwatch
    Match               *
    Region              ${AWS_REGION}
    Log_Group_Name      /app/logs
    Log_Stream_Prefix   ${HOSTNAME}-
    Auto_Create_Group   true